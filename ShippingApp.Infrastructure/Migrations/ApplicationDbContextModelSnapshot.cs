// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShippingApp.Infrastructure;

#nullable disable

namespace ShippingApp.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ShippingApp.Domain.Entities.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanManageAdmins")
                        .HasColumnType("bit");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Admins");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CanManageAdmins = true,
                            FullName = "Admin Adminsky",
                            Password = "x????1?Fx???!??",
                            Username = "adminxyz"
                        });
                });

            modelBuilder.Entity("ShippingApp.Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Cargo4You"
                        },
                        new
                        {
                            Id = 2,
                            Name = "ShipFaster"
                        },
                        new
                        {
                            Id = 3,
                            Name = "MaltaShip"
                        });
                });

            modelBuilder.Entity("ShippingApp.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CustomerLastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PickupAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ShippingApp.Domain.Entities.ParcelInquiryStatistics", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfInquiry")
                        .HasColumnType("datetime2");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Volume")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Statistics");
                });

            modelBuilder.Entity("ShippingApp.Domain.Entities.Company", b =>
                {
                    b.OwnsOne("ShippingApp.Domain.Entities.ParcelLimitations", "ParcelLimitations", b1 =>
                        {
                            b1.Property<int>("CompanyId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .HasColumnType("int");

                            b1.Property<double>("MaxVolume")
                                .HasColumnType("float");

                            b1.Property<double>("MaxWeight")
                                .HasColumnType("float");

                            b1.Property<double>("MinVolume")
                                .HasColumnType("float");

                            b1.Property<double>("MinWeight")
                                .HasColumnType("float");

                            b1.HasKey("CompanyId");

                            b1.ToTable("Limitations");

                            b1.WithOwner("Company")
                                .HasForeignKey("CompanyId");

                            b1.Navigation("Company");

                            b1.HasData(
                                new
                                {
                                    CompanyId = 1,
                                    Id = 1,
                                    MaxVolume = 2000.0,
                                    MaxWeight = 20.0,
                                    MinVolume = 0.0,
                                    MinWeight = 0.0
                                },
                                new
                                {
                                    CompanyId = 2,
                                    Id = 2,
                                    MaxVolume = 1700.0,
                                    MaxWeight = 30.0,
                                    MinVolume = 0.0,
                                    MinWeight = 10.0
                                },
                                new
                                {
                                    CompanyId = 3,
                                    Id = 3,
                                    MaxVolume = 0.0,
                                    MaxWeight = 0.0,
                                    MinVolume = 500.0,
                                    MinWeight = 10.0
                                });
                        });

                    b.OwnsMany("ShippingApp.Domain.Entities.ParcelVolumeRange", "ParcelVolumeRange", b1 =>
                        {
                            b1.Property<int>("CompanyId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<bool>("HasMaxVolume")
                                .HasColumnType("bit");

                            b1.Property<double>("MaxVolume")
                                .HasColumnType("float");

                            b1.Property<double>("MinVolume")
                                .HasColumnType("float");

                            b1.Property<double>("Price")
                                .HasColumnType("float");

                            b1.HasKey("CompanyId", "Id");

                            b1.ToTable("VolumeRanges");

                            b1.WithOwner("Company")
                                .HasForeignKey("CompanyId");

                            b1.Navigation("Company");

                            b1.HasData(
                                new
                                {
                                    CompanyId = 1,
                                    Id = 1,
                                    HasMaxVolume = true,
                                    MaxVolume = 1000.0,
                                    MinVolume = 0.0,
                                    Price = 10.0
                                },
                                new
                                {
                                    CompanyId = 1,
                                    Id = 2,
                                    HasMaxVolume = true,
                                    MaxVolume = 2000.0,
                                    MinVolume = 1000.0,
                                    Price = 20.0
                                },
                                new
                                {
                                    CompanyId = 2,
                                    Id = 3,
                                    HasMaxVolume = true,
                                    MaxVolume = 1000.0,
                                    MinVolume = 0.0,
                                    Price = 11.99
                                },
                                new
                                {
                                    CompanyId = 2,
                                    Id = 4,
                                    HasMaxVolume = true,
                                    MaxVolume = 1700.0,
                                    MinVolume = 1000.0,
                                    Price = 21.989999999999998
                                },
                                new
                                {
                                    CompanyId = 3,
                                    Id = 5,
                                    HasMaxVolume = true,
                                    MaxVolume = 1000.0,
                                    MinVolume = 500.0,
                                    Price = 9.5
                                },
                                new
                                {
                                    CompanyId = 3,
                                    Id = 6,
                                    HasMaxVolume = true,
                                    MaxVolume = 2000.0,
                                    MinVolume = 1000.0,
                                    Price = 19.5
                                },
                                new
                                {
                                    CompanyId = 3,
                                    Id = 7,
                                    HasMaxVolume = true,
                                    MaxVolume = 5000.0,
                                    MinVolume = 2000.0,
                                    Price = 48.5
                                },
                                new
                                {
                                    CompanyId = 3,
                                    Id = 8,
                                    HasMaxVolume = false,
                                    MaxVolume = 0.0,
                                    MinVolume = 5000.0,
                                    Price = 147.5
                                });
                        });

                    b.OwnsMany("ShippingApp.Domain.Entities.ParcelWeightRange", "ParcelWeightRange", b1 =>
                        {
                            b1.Property<int>("CompanyId")
                                .HasColumnType("int");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("int");

                            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b1.Property<int>("Id"));

                            b1.Property<bool>("HasMaxWeight")
                                .HasColumnType("bit");

                            b1.Property<double>("IncrementalPriceStartingPoint")
                                .HasColumnType("float");

                            b1.Property<double>("IncrementalPriceValue")
                                .HasColumnType("float");

                            b1.Property<double>("MaxWeight")
                                .HasColumnType("float");

                            b1.Property<double>("MinWeight")
                                .HasColumnType("float");

                            b1.Property<double>("Price")
                                .HasColumnType("float");

                            b1.HasKey("CompanyId", "Id");

                            b1.ToTable("WeightRanges");

                            b1.WithOwner("Company")
                                .HasForeignKey("CompanyId");

                            b1.Navigation("Company");

                            b1.HasData(
                                new
                                {
                                    CompanyId = 1,
                                    Id = 1,
                                    HasMaxWeight = true,
                                    IncrementalPriceStartingPoint = 0.0,
                                    IncrementalPriceValue = 0.0,
                                    MaxWeight = 2.0,
                                    MinWeight = 0.0,
                                    Price = 15.0
                                },
                                new
                                {
                                    CompanyId = 1,
                                    Id = 2,
                                    HasMaxWeight = true,
                                    IncrementalPriceStartingPoint = 0.0,
                                    IncrementalPriceValue = 0.0,
                                    MaxWeight = 15.0,
                                    MinWeight = 2.0,
                                    Price = 18.0
                                },
                                new
                                {
                                    CompanyId = 1,
                                    Id = 3,
                                    HasMaxWeight = true,
                                    IncrementalPriceStartingPoint = 0.0,
                                    IncrementalPriceValue = 0.0,
                                    MaxWeight = 20.0,
                                    MinWeight = 15.0,
                                    Price = 35.0
                                },
                                new
                                {
                                    CompanyId = 2,
                                    Id = 4,
                                    HasMaxWeight = true,
                                    IncrementalPriceStartingPoint = 0.0,
                                    IncrementalPriceValue = 0.0,
                                    MaxWeight = 15.0,
                                    MinWeight = 10.0,
                                    Price = 16.5
                                },
                                new
                                {
                                    CompanyId = 2,
                                    Id = 5,
                                    HasMaxWeight = true,
                                    IncrementalPriceStartingPoint = 0.0,
                                    IncrementalPriceValue = 0.0,
                                    MaxWeight = 25.0,
                                    MinWeight = 15.0,
                                    Price = 36.5
                                },
                                new
                                {
                                    CompanyId = 2,
                                    Id = 6,
                                    HasMaxWeight = true,
                                    IncrementalPriceStartingPoint = 25.0,
                                    IncrementalPriceValue = 0.41699999999999998,
                                    MaxWeight = 30.0,
                                    MinWeight = 25.0,
                                    Price = 40.0
                                },
                                new
                                {
                                    CompanyId = 3,
                                    Id = 7,
                                    HasMaxWeight = true,
                                    IncrementalPriceStartingPoint = 0.0,
                                    IncrementalPriceValue = 0.0,
                                    MaxWeight = 20.0,
                                    MinWeight = 10.0,
                                    Price = 16.989999999999998
                                },
                                new
                                {
                                    CompanyId = 3,
                                    Id = 8,
                                    HasMaxWeight = true,
                                    IncrementalPriceStartingPoint = 0.0,
                                    IncrementalPriceValue = 0.0,
                                    MaxWeight = 30.0,
                                    MinWeight = 20.0,
                                    Price = 33.990000000000002
                                },
                                new
                                {
                                    CompanyId = 3,
                                    Id = 9,
                                    HasMaxWeight = false,
                                    IncrementalPriceStartingPoint = 25.0,
                                    IncrementalPriceValue = 0.40999999999999998,
                                    MaxWeight = 0.0,
                                    MinWeight = 30.0,
                                    Price = 43.990000000000002
                                });
                        });

                    b.Navigation("ParcelLimitations");

                    b.Navigation("ParcelVolumeRange");

                    b.Navigation("ParcelWeightRange");
                });
#pragma warning restore 612, 618
        }
    }
}
